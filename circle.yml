#machine:
#  java:
#    version: openjdk8
#general:
#  artifacts:
#    - /home/ubuntu/TwitchExample/app/build/outputs/apk/
#    - /home/ubuntu/TwitchExample/app/build/reports/tests/results/
#dependencies:
#  pre:
#    - echo y | android update sdk --no-ui --all --filter "tools,platform-tools,android-27"
#    - echo y | android update sdk --no-ui --all --filter "build-tools-27.0.2"
#test:
#  override:
#    #Build and run Debug tests
#    - ./gradlew assembleDebug testDebug

# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/android:api-27-node8-alpha

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/TwitchExample

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx8G
#    resource_class: large

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Depdendencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      # Building
      - run:
          name: Build
          command: ./gradlew clean assembleDebug
#          command: |
#            echo "Branch: ${CIRCLE_BRANCH} , PR: ${CIRCLE_PULL_REQUEST}"
#            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
#              ./gradlew clean assembleRelease
#            else
#              export IS_DEBUG=true
#              export BUILD_NUMBER=${CIRCLE_BUILD_NUM}
#              ./gradlew clean assembleDebugBuilds --stacktrace
#            fi
      # run tests!
      - run:
          name: Unit Tests
          command: ./gradlew testDebug
#          command: |
#            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
#              ./gradlew testRelease
#            else
#              ./gradlew testDebug
#            fi
#      - run:
#          name: Publishing to Crashlytics Beta
#          command: |
#            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
#              ./gradlew crashlyticsUploadDistributionAmazonMobileRelease crashlyticsUploadDistributionAmazonLeanbackRelease crashlyticsUploadDistributionMobileRelease crashlyticsUploadDistributionLeanbackRelease crashlyticsUploadDistributionForceleanbackRelease
#            else
#              ./gradlew crashlyticsUploadDistributionAmazonMobileDebug crashlyticsUploadDistributionAmazonLeanbackDebug crashlyticsUploadDistributionMobileDebug crashlyticsUploadDistributionLeanbackDebug
#            fi
      # Storing Artifacts
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks/
      - store_test_results:
          path: app/build/test-results
